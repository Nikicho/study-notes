基础部分：
看简历的东西，问问题
现场写布局，css，flex

业务场景：


算法题：
1 反转链表；

2 一个单链表，把所有的奇数节点和偶数节点分别排在一起，奇数在前偶数在后,最后输出重新连接后的链表头结点   
public class ListNode {      
	int val;      
	ListNode next;      
	ListNode(int x) { val = x; }  
}   
输入：1->2->3->4->5->6->7  
输出：1->3->5->7->2->4->6  
说明：1->3->5->7{奇数部分}->2->4->6 偶数部分  
public ListNode splitList(ListNode head) {    

}    

3  非递归方式做二叉树的前序遍历, 函数入参：根节点 root ，前序打印节点的值   
public class Node {      
	int val;      
	Node left;      
	Node right;      
	Node(int x) { val = x; }  
}    
public void preorderTraversal(Node root) {   

}       

4 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序打印出答案。

示例 1：
输入：nums = [1,2,3]
输出：
[1,2,3]
[1,3,2]
[2,1,3]
[2,3,1]
[3,1,2]
[3,2,1]

示例 2：
输入：nums = [0,1]
输出：
[0,1]
[1,0]

public void permute(int[] nums) {

